<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 다른 mapper와 중복되지 않도록 네임스페이스 기재 -->
<!-- @@@@@달려있는게 준구 member(실제 우리가 쓰는 회원) 쿼리문 입니다. @와 @ 사이에 있어욥 -->
<mapper namespace="member">
	
 	<!-- 01. 로그인 체크 
	<select id="loginCheck" resultType="String">
		SELECT user_name AS userName FROM tbl_member
		WHERE user_id = #{userId} AND user_pw = #{userPw}
	</select> -->
	
	<!-- 01. 로그인 체크 -->
	<select id="loginCheck" resultType="String">
		SELECT user_pw FROM tbl_member
		WHERE user_id = #{userId}
	</select>
	
	<!-- 02. 회원 상세 정보 -->
	<select id="viewMember" resultType="com.kh.web.model.member.dto.MemberVO">
		SELECT 
			user_name AS userName,
			user_id AS userId,
			user_pw AS userPw,
			user_email AS userEmail,
			user_regdate AS userRegdate
		FROM tbl_member
		WHERE user_id = #{userId}
	</select>
	
	<!-- 03. 회원 목록 -->
	<select id="memberList" resultType="com.kh.web.model.member.dto.MemberVO">
        SELECT 
          user_id AS userId, 
          user_name AS userName,
          user_email AS userEmail,
          user_regdate AS userRegdate
        FROM tbl_member
        ORDER BY userName
    </select>
    
    <!-- 04. 회원 등록 -->
    <insert id="insertMember">
        INSERT INTO tbl_member
            (user_id, user_pw, user_name, user_email)
        VALUES 
            (#{userId}, #{userPw}, #{userName}, #{userEmail})    
    </insert>
    
    <!-- 05. 회원 정보 상세 보기 -->
    <select id="viewMember2" resultType="com.kh.web.model.member.dto.MemberVO">
        SELECT 
          user_id AS userId, 
          user_name AS userName,
          user_email AS userEmail,
          user_regdate AS userRegdate,
          user_updatedate AS userUpdatedate
        FROM tbl_member
        WHERE user_id = #{userId}
    </select>
    
   	<!-- 06. 회원정보 수정처리 -->
    <update id="updateMember">
        UPDATE tbl_member
        SET
            user_pw = #{userPw},
            user_name = #{userName},
            user_email = #{userEmail},
            user_updatedate = SYSDATE
        WHERE
            user_id = #{userId}    
    </update>
    
    <!-- 06. 회원정보 삭제 처리 -->
    <delete id="deleteMember">
        DELETE FROM tbl_member
        WHERE user_id = #{userId}
    </delete>
    
    <!-- 07. 비밀번호 체크 -->
    <select id="checkPw" resultType="int">
        SELECT 
            COUNT(*) 
        FROM tbl_member
        WHERE user_id = #{userId} AND user_pw = #{userPw}
    </select>
	
	<!-- 로그인 체크 @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@-->
	<select id="loginCheck2" resultType="String">
        SELECT password FROM t_userinfo
		WHERE email = #{email}
    </select>
    
	<!-- 뷰멤버 -->
    <select id="viewMember3" resultType="com.kh.web.model.member.dto.MemberVo_Test_JG">
        SELECT 
            email,
            userid,
            gradename
        FROM t_userinfo
        WHERE email = #{email}
    </select>
	
	<!-- 01. 회원목록 -->
	<select id="memberList2" resultType="com.kh.web.model.member.dto.MemberVo_Test_JG">
        SELECT 
          email,
          userid,
          gradename
        FROM t_userinfo
    </select>
    
    <!-- 02. 회원 등록 -->
    <insert id="insertMember2">
        INSERT INTO t_userinfo
            (email, userid, password, gradename)
        VALUES 
            (#{email}, #{userid}, #{password}, '일반')    
    </insert>
    
    <!-- 회원 등록시 이메일 중복 체크 -->
    <select id="insertCheck" resultType="String">
    	SELECT
    	  count(email)
    	FROM t_userinfo
    	WHERE email = #{email}
    </select>
    
	<!-- @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ -->
	
	<!-- 페이징 sql -->
	<sql id="pagingHeader">
		SELECT * FROM (
			SELECT ROWNUM AS rn, A.* FROM (
	</sql>
	<sql id="pagingFooter">
			) A
		) WHERE rn BETWEEN #{start} AND #{end}
	</sql>
	
</mapper>
